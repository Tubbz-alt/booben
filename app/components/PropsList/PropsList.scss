@charset "UTF-8";
@import 'variables';

// Type classnames
$prop-input: 'prop-type-input';
$prop-textarea: 'prop-type-textarea';
$prop-list: 'prop-type-list';
$prop-constructor: 'prop-type-constructor';
$prop-array: 'prop-type-array';
$prop-toggle: 'prop-type-toggle';

@include exports(props-list) {
	// =================================================================================================================
	// LIST
	// =================================================================================================================
	.props-list,
	.prop-tree_list {
		background-color: $prop-list-bg-color;
		border-left: $prop-list-border-left-thickness solid $prop-list-border-left-color;
		border-bottom: $prop-list-border-bottom-thickness solid $prop-list-border-bottom-color;

		.prop-item & {
			// margin-left: $props-level-offset;

			margin-left: -$prop-item-padding-x;
			margin-right: -$prop-item-padding-x;
			padding-left: $props-level-offset + $prop-item-padding-x !important;

			opacity: 0;
			pointer-events: none;
			position: fixed;
			margin-bottom: $props-list-margin-bottom;
		}

		.prop-item-wrapper.has-image + & {
			// margin-left: $props-image-level-offset - $prop-item-padding-x + $props-level-offset;

			margin-left: -$prop-item-padding-x;
			padding-left: $props-image-level-offset + $props-level-offset !important;
		}


		.sublevel-is-visible + & {
			opacity: 1;
			pointer-events: initial;
			position: relative;
			padding: $prop-list-padding;
			margin-top: $props-list-margin-top;
			padding-top: 0;
		}
	}

	.prop-tree_list {
		.sublevel-is-visible + & .props-list {
			opacity: 1;
			pointer-events: initial;
			position: relative;
		}
	}


	// =================================================================================================================
	// PROPS ITEM
	// =================================================================================================================
	.prop-item {
		margin: 0 (-$prop-item-padding-x);
		width: calc(100% + #{$prop-item-padding-x*2});
		max-width: calc(100% + #{$prop-item-padding-x*2});
		padding: $prop-item-padding-y $prop-item-padding-x;

		&.sublevel-is-visible {
			padding-top: $prop-item-opened-padding-y;
			padding-bottom: $prop-item-opened-padding-y;
			background-color: $prop-item-opened-bg-color;
			border-top: $prop-item-opened-border-thickness solid $prop-item-opened-border-color;
			border-bottom: $prop-item-opened-border-thickness solid $prop-item-opened-border-color;
		}
	}

	.prop-item-wrapper {
		display: flex;
	}

	.prop-item-content-box {
		flex-grow: 1;
		display: flex;
		align-items: stretch;
		max-width: 100%;
		flex-direction: column;

		.has-image & {
			min-height: $prop-image-size;
			justify-content: center;
		}
	}

	// Props Image
	.prop-item-image-box {
		background-color: $prop-image-bg-color;
		width: $prop-image-size;
		height: $prop-image-size;
		display: flex;
		align-items: center;
		justify-content: center;
		margin-right: $prop-image-spacing;
		background-repeat: no-repeat;
		background-position: center;
		background-size: cover;
		flex-shrink: 0;

		@include user-select;

		img {
			max-width: 100%;
			max-height: 100%;
		}
	}

	// Prop Actions
	.prop_actions {
		display: flex;
		flex-shrink: 0;
		margin-top: $prop-actions-margin-top;
		height: $prop-action-height + $prop-action-margin-y;

		&.prop_actions-left {
			margin-left: -$prop-action-margin-x;
			margin-right: $prop-action-margin-x;
		}
		&.prop_actions-right {
			margin-left: $prop-action-margin-x;
			margin-right: -$prop-action-margin-x;
		}
	}

	.prop_action {
		display: flex;
		flex-shrink: 0;
		margin: $prop-action-margin-y $prop-action-margin-x;

		&,
		.button-icon {
			@include icon-size(
							$prop-action-box-size,
							$prop-action-img-size);

			@include icon-style($prop-action-color);

			&:hover,
			&:focus {
				@include icon-style($prop-action-hover-color);
			}
		}

		.button {
			min-height: 0;
			border: 0 solid transparent;
		}

		.has-image & {
			height: $prop-image-size;
			display: flex;
			align-items: center;
		}
	}

	.prop-item-wrapper.sublevel-is-visible .prop_action-collapse .button{
		transform: rotate(90deg);
	}


	.prop_action-toggle {
		display: flex;
		align-items: center;
		width: auto;
	}

	// Icon
	.prop-item-icon {
		cursor: $cursor-pointer;
		border-radius: $prop-icon-border-radius;

		&,
		.button-icon {
			@include icon-size(
							$prop-icon-box-size,
							$prop-icon-img-size);

			@include icon-style($prop-icon-color);

			&:hover,
			&:focus {
				@include icon-style($prop-icon-hover-color);
			}
		}

		&:hover,
		&:focus {
			.button {
				background-color: $prop-icon-hover-bg-color;
			}
		}

		.button {
			min-height: 0;
		}
	}

	.prop-item-icon-left { margin-right: $prop-icon-margin; }
	.prop-item-icon-right { margin-left: $prop-icon-margin; }

	.prop-item-icon-collapse {
		.sublevel-is-visible & .button{
			transform: rotate(90deg);
			@include single-transition(transform);
		}
	}


	// =================================================================================================================
	// PROPS TYPES
	// =================================================================================================================
	.prop-item {
		.input,
		.textarea,
		.select-box {
			margin-top: 0;
			margin-bottom: 0;
		}
	}

	.prop-item-label {
		font-size: $prop-label-font-size;
		line-height: $prop-label-line-height;
		font-weight: $prop-label-font-weight;
		text-transform: $prop-label-text-transform;
		color: $prop-label-color;
		display: flex;
		margin-bottom: $prop-label-margin-bottom;

		@include user-select();
	}


	.prop-item_label-text {
		margin-right: $base-module/2;

		.is-flat-array .props-list & { color: $prop-label-flat-color; }

		.#{$prop-input} &,
		.#{$prop-textarea} &,
		.#{$prop-list} & {
			font-size: fs(-1);
			color: $grey-600
		}
	}

	.prop-item_type {
		font-size: fs(-1);
		color: $grey-500;
		margin-right: $base-module/2;
	}

	// PROP: input
	// =================================================================================================================
	.prop-type-input {
		.input {
			width: 100%;
			max-width: 100%;
		}
	}

	// PROP: textarea
	// =================================================================================================================
	.prop-type-textarea {
		.textarea {
			width: 100%;
			max-width: 100%;
		}
	}

	// =================================================================================================================
	// PROP: tree
	// =================================================================================================================
	.prop-item-tree-wrapper {
		width: 100%;
	}

	.prop-tree {
		.block-content-box-heading {
			padding-left: 0;
			padding-right: 0;
			margin-top: 0;

			.prop-item-label {
				font-size: inherit;
				color: inherit;
				font-weight: inherit;
				text-transform: inherit;
				line-height: inherit;
			}
		}
	}

	.prop-tree-item-action-row {
		text-align: right;
		margin-right: -$base-module;
		.prop-item + & { margin-top: $props-list-margin-bottom }
	}

	.prop-tree_field-new {
		// margin: $props-list-margin-bottom (-$prop-list-padding-x) (-$prop-list-padding-y);
		//width: calc(100% + #{$prop-list-padding-x*2});
		//border-top: 2px solid $color-border;

		margin: $props-list-margin-bottom 0 0;

		padding: $prop-new-field-pad-y $prop-new-field-pad-x;
		background-color: $prop-new-field-bg-color;
	}

	.prop-tree_field-new_row {
		& + & { margin-top: $prop-new-field-element-spacing }

		&.field-new_buttons {
			margin-right: -$base-module;
			margin-bottom: -$base-module;
			text-align: right;
		}

		&.field-new_title {
			font-size: fs(1);
			font-weight: $font-weight-semibold;
		}
	}

	// BREADCRUMBS
	.prop-tree-breadcrumbs {
		border-bottom: rem-calc(1) solid $color-border;
		margin-bottom: $base-module;
	}

	.prop-tree-breadcrumbs .breadcrumbs {
		margin-top: 0;
		margin-left: 0;
	}

	// LIST
	.prop-tree-list {
		.sublevel-is-visible + & {
			position: relative;
			opacity: 1;
			pointer-events: initial;
		}
	}
}

